/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2406                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    arch        "LSB;label=32;scalar=64";
    class       volScalarField;
    location    "5.1";
    object      gradTx;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 -1 0 1 0 0 0];

internalField   nonuniform List<scalar> 
100
(
-5000
-13000
-2000
4000
-13000
-13000
2000
5000
5000
6000
-2000
-5000
7000
3000
-18000
-14000
4000
3000
4000
6000
3000
10000
14000
-5000
-21000
-8000
3000
4000
2000
-1000
1000
4000
7000
-4000
-14000
-9000
-5000
7000
6000
1000
-2000
-2000
3000
-6000
-12000
-8000
-1000
7000
2000
-3000
1000
-3000
1000
-4000
-6000
-4000
-3000
8000
-1000
-7000
-1000
-2000
1000
0
-6000
-6000
-5000
-3000
-6000
-7000
2000
-1000
-5000
-6000
-4000
-8000
-6000
-3000
-15000
-12000
7000
3000
-7000
-9000
-10000
-9000
-7000
-12000
-22000
-13000
1000
-3000
-5000
-9000
-15000
-9000
-9000
-23000
-16000
-2000
)
;

boundaryField
{
    left
    {
        type            calculated;
        value           uniform 0;
    }
    right
    {
        type            calculated;
        value           uniform 0;
    }
    top
    {
        type            calculated;
        value           nonuniform List<scalar> 10(1000 -3000 -5000 -9000 -15000 -9000 -9000 -23000 -16000 -2000);
    }
    bottom
    {
        type            calculated;
        value           nonuniform List<scalar> 10(-5000 -13000 -2000 4000 -13000 -13000 2000 5000 5000 6000);
    }
    defaultFaces
    {
        type            empty;
    }
}


// ************************************************************************* //
