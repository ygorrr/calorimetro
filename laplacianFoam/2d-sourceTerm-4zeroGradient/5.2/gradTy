/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2406                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    arch        "LSB;label=32;scalar=64";
    class       volScalarField;
    location    "5.2";
    object      gradTy;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 -1 0 1 0 0 0];

internalField   nonuniform List<scalar> 
100
(
-12000
2000
10000
14000
4000
0
0
10000
8000
6000
-34000
0
40000
34000
6000
8000
14000
18000
24000
6000
2000
6000
22000
12000
8000
26000
12000
-2000
26000
18000
26000
10000
-10000
-18000
-16000
8000
-4000
-4000
10000
-6000
-12000
-8000
-26000
-28000
-28000
-8000
-8000
6000
2000
-26000
2000
10000
4000
0
22000
20000
20000
6000
-12000
-16000
38000
40000
40000
22000
34000
26000
30000
24000
-6000
-18000
38000
46000
48000
24000
26000
22000
22000
14000
-12000
-28000
26000
20000
18000
26000
8000
-6000
8000
-18000
-44000
-12000
16000
0
-2000
8000
-8000
-14000
-4000
-18000
-26000
-4000
)
;

boundaryField
{
    left
    {
        type            calculated;
        value           nonuniform List<scalar> 10(-12000 -34000 2000 26000 -12000 2000 38000 38000 26000 16000);
    }
    right
    {
        type            calculated;
        value           nonuniform List<scalar> 10(6000 6000 18000 -6000 -26000 -16000 -18000 -28000 -12000 -4000);
    }
    top
    {
        type            calculated;
        value           uniform 0;
    }
    bottom
    {
        type            calculated;
        value           uniform 0;
    }
    defaultFaces
    {
        type            empty;
    }
}


// ************************************************************************* //
